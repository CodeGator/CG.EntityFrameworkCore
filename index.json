{
  "api/CG.EntityFrameworkCore.Auditing.AuditedEntityAttribute.html": {
    "href": "api/CG.EntityFrameworkCore.Auditing.AuditedEntityAttribute.html",
    "title": "Class AuditedEntityAttribute",
    "keywords": "Class AuditedEntityAttribute This class decorates an entity type that should be audited. Inheritance System.Object AuditedEntityAttribute Namespace : CG.EntityFrameworkCore.Auditing Assembly : CG.EntityFrameworkCore.dll Syntax public class AuditedEntityAttribute : Attribute Properties RecordCreates This property indicates whether or not creates should be audited. true to audit creates, false otherwise. Declaration public bool RecordCreates { get; set; } Property Value Type Description System.Boolean RecordDeletes This property indicates whether or not deletes should be audited. true to audit deletes, false otherwise. Declaration public bool RecordDeletes { get; set; } Property Value Type Description System.Boolean RecordUpdates This property indicates whether or not updates should be audited. true to audit updates, false otherwise. Declaration public bool RecordUpdates { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.EntityFrameworkCore.Auditing.AuditEvent.html": {
    "href": "api/CG.EntityFrameworkCore.Auditing.AuditEvent.html",
    "title": "Class AuditEvent",
    "keywords": "Class AuditEvent This class is an entity that represents an audit event. Inheritance System.Object AuditEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.EntityFrameworkCore.Auditing Assembly : CG.EntityFrameworkCore.dll Syntax public class AuditEvent Properties ActionType This property contains the action type for the event. Declaration public string ActionType { get; set; } Property Value Type Description System.String Changes This property contains the user name for the event. Declaration public Dictionary<string, object> Changes { get; set; } Property Value Type Description Dictionary < System.String , System.Object > EntityId This property contains the entity identifier for the event. Declaration public string EntityId { get; set; } Property Value Type Description System.String EntityName This property contains the entity name for the event. Declaration public string EntityName { get; set; } Property Value Type Description System.String Id This property contains the primary key for the entity. Declaration public long Id { get; set; } Property Value Type Description System.Int64 TimeStamp This property contains the timestamp for the event. Declaration public DateTime TimeStamp { get; set; } Property Value Type Description DateTime UserName This property contains the user name for the event. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/CG.EntityFrameworkCore.Auditing.html": {
    "href": "api/CG.EntityFrameworkCore.Auditing.html",
    "title": "Namespace CG.EntityFrameworkCore.Auditing",
    "keywords": "Namespace CG.EntityFrameworkCore.Auditing Classes AuditedEntityAttribute This class decorates an entity type that should be audited. AuditEvent This class is an entity that represents an audit event. Interfaces IAuditRepository This interface represents a repository of audit events."
  },
  "api/CG.EntityFrameworkCore.Auditing.IAuditRepository.html": {
    "href": "api/CG.EntityFrameworkCore.Auditing.IAuditRepository.html",
    "title": "Interface IAuditRepository",
    "keywords": "Interface IAuditRepository This interface represents a repository of audit events. Namespace : CG.EntityFrameworkCore.Auditing Assembly : CG.EntityFrameworkCore.dll Syntax public interface IAuditRepository Methods FindAllAsync(Nullable<Expression<Func<AuditEvent, Boolean>>>, CancellationToken) This method queries for audit events that match the given criteria. Declaration Task<IQueryable<AuditEvent>> FindAllAsync(Expression<Func<AuditEvent, bool>>? criteria = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Nullable < Expression < Func < AuditEvent , System.Boolean >>> criteria The LINQ criteria for the query. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the operation. Returns Type Description Task < IQueryable < AuditEvent >> A task to perform the operation that returns the results of the query."
  },
  "api/CG.EntityFrameworkCore.Entities.AuditedEntityBase.html": {
    "href": "api/CG.EntityFrameworkCore.Entities.AuditedEntityBase.html",
    "title": "Class AuditedEntityBase",
    "keywords": "Class AuditedEntityBase This class represents a base entity with audit properties. Inheritance System.Object AuditedEntityBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.EntityFrameworkCore.Entities Assembly : CG.EntityFrameworkCore.dll Syntax public class AuditedEntityBase Properties CreatedBy This property contains the name of the person who created the entity. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the entity was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the entity. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the entity was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.EntityFrameworkCore.Entities.html": {
    "href": "api/CG.EntityFrameworkCore.Entities.html",
    "title": "Namespace CG.EntityFrameworkCore.Entities",
    "keywords": "Namespace CG.EntityFrameworkCore.Entities Classes AuditedEntityBase This class represents a base entity with audit properties."
  },
  "api/CG.EntityFrameworkCore.Maps.AuditedEntityMapBase-1.html": {
    "href": "api/CG.EntityFrameworkCore.Maps.AuditedEntityMapBase-1.html",
    "title": "Class AuditedEntityMapBase<TEntity>",
    "keywords": "Class AuditedEntityMapBase<TEntity> This class represents a base map for entity types derived from Inheritance System.Object EntityMapBase <TEntity> AuditedEntityMapBase<TEntity> Implements IEntityTypeConfiguration <TEntity> Inherited Members EntityMapBase<TEntity>._modelBuilder Namespace : CG.EntityFrameworkCore.Maps Assembly : CG.EntityFrameworkCore.dll Syntax public abstract class AuditedEntityMapBase<TEntity> : EntityMapBase<TEntity> where TEntity : AuditedEntityBase Type Parameters Name Description TEntity The associated concrete Constructors AuditedEntityMapBase(ModelBuilder) This constructor creates a new instance of the AuditedEntityMapBase<TEntity> class. Declaration public AuditedEntityMapBase(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<TEntity>) This method configures the TEntity entity. Declaration public override void Configure(EntityTypeBuilder<TEntity> builder) Parameters Type Name Description EntityTypeBuilder <TEntity> builder The builder to use for the operation. Overrides CG.EntityFrameworkCore.Maps.EntityMapBase<TEntity>.Configure(EntityTypeBuilder<TEntity>) Implements IEntityTypeConfiguration<>"
  },
  "api/CG.EntityFrameworkCore.Maps.EntityMapBase-1.html": {
    "href": "api/CG.EntityFrameworkCore.Maps.EntityMapBase-1.html",
    "title": "Class EntityMapBase<TEntity>",
    "keywords": "Class EntityMapBase<TEntity> This class represents a base implementation of the interface. Inheritance System.Object EntityMapBase<TEntity> AuditedEntityMapBase<TEntity> Namespace : CG.EntityFrameworkCore.Maps Assembly : CG.EntityFrameworkCore.dll Syntax public abstract class EntityMapBase<TEntity> : IEntityTypeConfiguration<TEntity> where TEntity : class Type Parameters Name Description TEntity The type of associated entity. Constructors EntityMapBase(ModelBuilder) This constructor creates a new instance of the EntityMapBase<TEntity> class. Declaration public EntityMapBase(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Fields _modelBuilder This field contains the model builder for this map. Declaration protected readonly ModelBuilder _modelBuilder Field Value Type Description ModelBuilder Methods Configure(EntityTypeBuilder<TEntity>) This method may be overridden in order to configure the TEntity entity. Declaration public abstract void Configure(EntityTypeBuilder<TEntity> builder) Parameters Type Name Description EntityTypeBuilder <TEntity> builder The builder to use for the operation."
  },
  "api/CG.EntityFrameworkCore.Maps.html": {
    "href": "api/CG.EntityFrameworkCore.Maps.html",
    "title": "Namespace CG.EntityFrameworkCore.Maps",
    "keywords": "Namespace CG.EntityFrameworkCore.Maps Classes AuditedEntityMapBase<TEntity> This class represents a base map for entity types derived from EntityMapBase<TEntity> This class represents a base implementation of the interface."
  },
  "api/CG.EntityFrameworkCore.Options.DataAcessLayerOptions.html": {
    "href": "api/CG.EntityFrameworkCore.Options.DataAcessLayerOptions.html",
    "title": "Class DataAcessLayerOptions",
    "keywords": "Class DataAcessLayerOptions This class contains configuration settings for a data-access layer (DAL). Inheritance System.Object DataAcessLayerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.EntityFrameworkCore.Options Assembly : CG.EntityFrameworkCore.dll Syntax public class DataAcessLayerOptions Properties DropDatabaseOnStartup This property directs the DAL to drop the underlying database on startup. Declaration public bool DropDatabaseOnStartup { get; set; } Property Value Type Description System.Boolean MigrateDatabaseOnStartup This property directs the DAL to migrate the underlying database on startup. Declaration public bool MigrateDatabaseOnStartup { get; set; } Property Value Type Description System.Boolean Provider This property contains the name of the currently selected provider. Declaration public string Provider { get; set; } Property Value Type Description System.String SectionPath This property is for internal use, only. It contains the path to the provider's configuration section. Declaration public string SectionPath { get; set; } Property Value Type Description System.String"
  },
  "api/CG.EntityFrameworkCore.Options.html": {
    "href": "api/CG.EntityFrameworkCore.Options.html",
    "title": "Namespace CG.EntityFrameworkCore.Options",
    "keywords": "Namespace CG.EntityFrameworkCore.Options Classes DataAcessLayerOptions This class contains configuration settings for a data-access layer (DAL)."
  },
  "api/CG.EntityFrameworkCore.Repositories.html": {
    "href": "api/CG.EntityFrameworkCore.Repositories.html",
    "title": "Namespace CG.EntityFrameworkCore.Repositories",
    "keywords": "Namespace CG.EntityFrameworkCore.Repositories Classes RepositoryBase<TRepository, TContext> This class is a base implementation of an Entity Framework repository."
  },
  "api/CG.EntityFrameworkCore.Repositories.RepositoryBase-2.html": {
    "href": "api/CG.EntityFrameworkCore.Repositories.RepositoryBase-2.html",
    "title": "Class RepositoryBase<TRepository, TContext>",
    "keywords": "Class RepositoryBase<TRepository, TContext> This class is a base implementation of an Entity Framework repository. Inheritance System.Object RepositoryBase<TRepository, TContext> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.EntityFrameworkCore.Repositories Assembly : CG.EntityFrameworkCore.dll Syntax public abstract class RepositoryBase<TRepository, TContext> where TRepository : RepositoryBase<TRepository, TContext> where TContext : DbContext Type Parameters Name Description TRepository The type of associated concrete repository. TContext The type of associated data-context. Constructors RepositoryBase(TContext, ILogger<TRepository>) This constructor creates a new instance of the RepositoryBase<TRepository, TContext> class. Declaration public RepositoryBase(TContext dbContext, ILogger<TRepository> logger) Parameters Type Name Description TContext dbContext The EFCORE data-context to use with this repository. ILogger <TRepository> logger The logger to use with this repository. Fields _dbContext This field contains the data-context for this repository. Declaration protected readonly TContext _dbContext Field Value Type Description TContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<TRepository> _logger Field Value Type Description ILogger <TRepository>"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.EntityFrameworkCore.dll Syntax public static class WebApplicationBuilderExtensions Methods AddAuditing(WebApplicationBuilder, Action<IServiceProvider, DbContextOptionsBuilder>, Nullable<Func<IEnumerable<String>>>, String, Nullable<ILogger>) This method adds auditing support for the data-access library. Declaration public static WebApplicationBuilder AddAuditing(this WebApplicationBuilder webApplicationBuilder, Action<IServiceProvider, DbContextOptionsBuilder> optionsDelegate, Func<IEnumerable<string>>? manualEntities = null, string sectionPath = \"DAL:Auditing\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. Action < IServiceProvider , DbContextOptionsBuilder > optionsDelegate The delegate for specifying options for the audit data-context. System.Nullable < Func < IEnumerable < System.String >>> manualEntities The delegate for specifying manual entity types that needs auditing services but can't be decorated with a attribute. System.String sectionPath The configuration section path to use for the operation. Defaults to DAL:Auditing . System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. AddDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method uses the information in the specified configuration section to call the AddXXXDataAcess method, for the currently configured provider, where the XXX part is dynamically replaced with the value of the DAL:Provider key, in the configuration. Declaration public static WebApplicationBuilder AddDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionPath = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionPath The configuration section path to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks There is a convention that says the target extension method, in your assembly, should look like this: public static WebApplicationBuilder AddMyProviderDataAccess( this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:MyProvider\", ILogger? bootstrapLogger = null ); Where the AddMyProviderDataAccess method name is derived from the corresponding provider ( MyProvider in this example). The SectionName parameter can by anything you like, but it should be legal a JSON name, since it must match a corresponding section in the application's configuration. The bootstrapLogger parameter can be provided if you want to log the internal actions of the method. That can be useful for troubleshooting, when the method fails to find, or call, your extension method. Examples This example demonstrates using the method in a typical ASP.NET application: var builder = WebApplication.CreateBuilder(args); builder.AddDataAccess(); // Normal builder configuration code removed, for clarity var app = builder.Build(); // Normal app startup code removed, for clarity app.Run();"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html",
    "title": "Class WebApplicationExtensions",
    "keywords": "Class WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.EntityFrameworkCore.dll Syntax public static class WebApplicationExtensions Methods UseDataAccess(WebApplication) This method uses the information in the options to call the UseXXXDataAcess method for the currently configured provider, where the XXX part is dynamically replaced with the value of the field. Declaration public static WebApplication UseDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Examples This example demonstrates using the method in a typical ASP.NET application: var builder = WebApplication.CreateBuilder(args); // Normal builder configuration code removed, for clarity var app = builder.Build(); // Normal app startup code removed, for clarity app.UseDataAccess(); app.Run();"
  },
  "api/Microsoft.EntityFrameworkCore.DatabaseFacadeExtensions.html": {
    "href": "api/Microsoft.EntityFrameworkCore.DatabaseFacadeExtensions.html",
    "title": "Class DatabaseFacadeExtensions",
    "keywords": "Class DatabaseFacadeExtensions This class contains extension methods related to the type. Inheritance System.Object DatabaseFacadeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.EntityFrameworkCore Assembly : CG.EntityFrameworkCore.dll Syntax public static class DatabaseFacadeExtensions Methods GetDatabaseName(DatabaseFacade) This method returns the database name using the connection string from the given object. Declaration public static string GetDatabaseName(this DatabaseFacade databaseFacade) Parameters Type Name Description DatabaseFacade databaseFacade The database facade to use for the operation. Returns Type Description System.String The value the database name used in the connection string, or an empty string if the database wasn't specified in the connection string. GetServerName(DatabaseFacade) This method returns the server name using the connection string from the given object. Declaration public static string GetServerName(this DatabaseFacade databaseFacade) Parameters Type Name Description DatabaseFacade databaseFacade The database facade to use for the operation. Returns Type Description System.String The value the server used in the connection string, or an empty string if the server wasn't specified in the connection string."
  },
  "api/Microsoft.EntityFrameworkCore.DbContextOptionsBuilderExtensions.html": {
    "href": "api/Microsoft.EntityFrameworkCore.DbContextOptionsBuilderExtensions.html",
    "title": "Class DbContextOptionsBuilderExtensions",
    "keywords": "Class DbContextOptionsBuilderExtensions This class contains extension methods related to the Microsoft.EntityFrameworkCore.DbContextOptionsBuilder type. Inheritance System.Object DbContextOptionsBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.EntityFrameworkCore Assembly : CG.EntityFrameworkCore.dll Syntax public static class DbContextOptionsBuilderExtensions Methods UseAuditing(DbContextOptionsBuilder, IServiceProvider, Nullable<ILogger>) This method adds an auditing interceptor to the given data-context options. Declaration public static DbContextOptionsBuilder UseAuditing(this DbContextOptionsBuilder contextOptionsBuilder, IServiceProvider serviceProvider, ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder contextOptionsBuilder The data-context options builder to use for the operation. IServiceProvider serviceProvider The service provider to use for the operation. System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder The value of the contextOptionsBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.EntityFrameworkCore.Design.DesignTimeDbContextFactory-1.html": {
    "href": "api/Microsoft.EntityFrameworkCore.Design.DesignTimeDbContextFactory-1.html",
    "title": "Class DesignTimeDbContextFactory<TContext>",
    "keywords": "Class DesignTimeDbContextFactory<TContext> This class is a base implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface. Inheritance System.Object DesignTimeDbContextFactory<TContext> Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory <TContext> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.EntityFrameworkCore.Design Assembly : CG.EntityFrameworkCore.dll Syntax public abstract class DesignTimeDbContextFactory<TContext> : IDesignTimeDbContextFactory<TContext> where TContext : DbContext Type Parameters Name Description TContext The type of associated data-context. Remarks The class reads a local 'appSettings.json' file with the connection information required to create a TContext instance, at runtime. The OnConfigureDataContextOptions(DbContextOptionsBuilder<TContext>, IConfiguration) method is called, internally, to configure the data-context options using the settings that were read in the 'appSettings.json' file.\"/> Examples This examples demonstrates deriving from DesignTimeDbContextFactory<TContext> to form a concrete factory class: class MySqlServerFactory : DesignTimeDbContextFactory{MyDbContext} { protected override OnConfigureDataContextOptions( DbContextOptionsBuilder{MyDbContext} optionsBuilder, IConfiguration configuration ) { var connectionString = configuration[\"MyConnectionString\"]; optionsBuilder.UseSqlServer(connectionString); } } Methods CreateDbContext(String[]) This method is called to create a TContext instance, at design-time. Declaration public virtual TContext CreateDbContext(string[] args) Parameters Type Name Description System.String [] args Optional arguments for the operation. Returns Type Description TContext An instance of TContext . OnConfigureDataContextOptions(DbContextOptionsBuilder<TContext>, IConfiguration) This method is called by the factory to configure the given Microsoft.EntityFrameworkCore.DbContextOptionsBuilder<TContext> object, from the specified object. Declaration protected abstract void OnConfigureDataContextOptions(DbContextOptionsBuilder<TContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder <TContext> optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration object to use for the operation. Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext>"
  },
  "api/Microsoft.EntityFrameworkCore.Design.html": {
    "href": "api/Microsoft.EntityFrameworkCore.Design.html",
    "title": "Namespace Microsoft.EntityFrameworkCore.Design",
    "keywords": "Namespace Microsoft.EntityFrameworkCore.Design Classes DesignTimeDbContextFactory<TContext> This class is a base implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface."
  },
  "api/Microsoft.EntityFrameworkCore.html": {
    "href": "api/Microsoft.EntityFrameworkCore.html",
    "title": "Namespace Microsoft.EntityFrameworkCore",
    "keywords": "Namespace Microsoft.EntityFrameworkCore Classes DatabaseFacadeExtensions This class contains extension methods related to the type. DbContextOptionsBuilderExtensions This class contains extension methods related to the Microsoft.EntityFrameworkCore.DbContextOptionsBuilder type."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.EntityFrameworkCore.dll Syntax public static class ServiceCollectionExtensions Methods AddAuditing(IServiceCollection, Action<IServiceProvider, DbContextOptionsBuilder>, Nullable<Func<IEnumerable<String>>>, Nullable<ILogger>) This method adds auditing support for the data-access library. Declaration public static IServiceCollection AddAuditing(this IServiceCollection serviceCollection, Action<IServiceProvider, DbContextOptionsBuilder> optionsDelegate, Func<IEnumerable<string>>? manualEntities = null, ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Action < IServiceProvider , DbContextOptionsBuilder > optionsDelegate The delegate for specifying options for the audit data-context. System.Nullable < Func < IEnumerable < System.String >>> manualEntities The delegate for specifying manual entity types that needs auditing services but can't be decorated with a attribute. System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together, Fluent style. AddDataAccess(IServiceCollection, IConfiguration, String, Nullable<ILogger>) This method adds services required to support entity framework core auditing. Declaration public static IServiceCollection AddDataAccess(this IServiceCollection serviceCollection, IConfiguration configuration, string sectionPath = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. System.String sectionPath The configuration section path to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.EntityFrameworkCore.dll contains EFCORE extensions used by other CodeGator packages."
  }
}